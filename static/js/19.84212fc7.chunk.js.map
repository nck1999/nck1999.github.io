{"version":3,"sources":["assets/back.svg","components/Header.tsx","utils/mediaStream.ts","components/MediaStream.tsx","containers/CameraSetting/index.tsx"],"names":["Header","name","backPath","Wrapper","to","BackButton","src","back","styled","img","div","mediaStreamErrorType","getMediaStream","cameraId","a","navigator","mediaDevices","getUserMedia","video","deviceId","facingMode","audio","console","error","Error","CAMERA_ACTIVATE_ERROR","GET_USER_MEDIA_NOT_FOUND","MediaStream","onFrame","suppressError","t","useTranslation","preferredCameraId","useCamera","useState","showUnSupportErrorModal","setShowUnSupportErrorModal","showCameraActivationErrorModal","setShowCameraActivationErrorModal","videoRef","useRef","canvasRef","useRafLoop","canvasElement","current","videoElement","readyState","HAVE_ENOUGH_DATA","canvas","getContext","height","videoHeight","width","videoWidth","drawImage","imageData","getImageData","loopStop","loopStart","initMediaStream","useCallback","undefined","stream","srcObject","play","message","useEffect","getTracks","forEach","track","stop","Video","ref","playsInline","Canvas","Dialog","open","keepMounted","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","isIOS","DialogActions","Button","color","CameraSetting","setPreferredCameraId","cameraList","PageWrapper","FormWrapper","StyledFormControl","labelId","value","onChange","e","target","map","label","isNil","isEmpty","VideoContainer","FormControl"],"mappings":"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","file":"static/js/19.84212fc7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/back.7bf7a56f.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport back from \"../assets/back.svg\";\n\ntype Props = {\n  name: string;\n  backPath?: string;\n};\n\nexport const Header = ({ name, backPath }: Props) => {\n  return (\n    <Wrapper>\n      {backPath && (\n        <Link to={backPath}>\n          <BackButton src={back} />\n        </Link>\n      )}\n      {name}\n    </Wrapper>\n  );\n};\n\nconst BackButton = styled.img`\n  height: 20px;\n  top: 14px;\n  left: 16px;\n  position: absolute;\n`;\n\nconst Wrapper = styled.div`\n  color: #ffffff;\n  background-color: #12b188;\n  text-align: center;\n  line-height: 48px;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  flex-shrink: 0;\n`;\n","export enum mediaStreamErrorType {\n  GET_USER_MEDIA_NOT_FOUND = \"GET_USER_MEDIA_NOT_FOUND\",\n  CAMERA_ACTIVATE_ERROR = \"CAMERA_ACTIVATE_ERROR\",\n}\n\nexport const getMediaStream = async (cameraId?: string) => {\n  if (\"mediaDevices\" in navigator) {\n    try {\n      // WebRTC adapter will polyfill this\n      return navigator.mediaDevices.getUserMedia({\n        video: cameraId\n          ? { deviceId: cameraId }\n          : { facingMode: \"environment\" },\n        audio: false,\n      });\n    } catch (e) {\n      console.error(e);\n      throw new Error(mediaStreamErrorType.CAMERA_ACTIVATE_ERROR);\n    }\n  } else {\n    throw new Error(mediaStreamErrorType.GET_USER_MEDIA_NOT_FOUND);\n  }\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { isIOS } from \"react-device-detect\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { useRafLoop } from \"react-use\";\nimport styled from \"styled-components\";\n\nimport { useCamera } from \"../hooks/useCamera\";\nimport { getMediaStream, mediaStreamErrorType } from \"../utils/mediaStream\";\n\ntype Props = {\n  onFrame?: (imageData: ImageData) => void;\n  suppressError?: boolean;\n};\n\nexport const MediaStream = ({ onFrame, suppressError = false }: Props) => {\n  const { t } = useTranslation(\"qr_reader\");\n  const { preferredCameraId } = useCamera();\n  const [showUnSupportErrorModal, setShowUnSupportErrorModal] = useState(false);\n  const [\n    showCameraActivationErrorModal,\n    setShowCameraActivationErrorModal,\n  ] = useState(false);\n\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [loopStop, loopStart] = useRafLoop(() => {\n    const canvasElement = canvasRef.current;\n    const videoElement = videoRef.current;\n\n    if (\n      canvasElement &&\n      videoElement &&\n      videoElement.readyState === videoElement.HAVE_ENOUGH_DATA\n    ) {\n      const canvas = canvasElement.getContext(\"2d\");\n      if (!canvas) return;\n\n      canvasElement.height = videoElement.videoHeight;\n      canvasElement.width = videoElement.videoWidth;\n      canvas.drawImage(\n        videoElement,\n        0,\n        0,\n        canvasElement.width,\n        canvasElement.height\n      );\n\n      const imageData = canvas.getImageData(\n        0,\n        0,\n        canvasElement.width,\n        canvasElement.height\n      );\n\n      onFrame && onFrame(imageData);\n    }\n  }, false);\n\n  const initMediaStream = useCallback(async () => {\n    const videoElement = videoRef.current;\n    if (!videoElement) return;\n    try {\n      const stream = await getMediaStream(\n        preferredCameraId === \"AUTO\" ? undefined : preferredCameraId\n      );\n\n      if (!stream) return;\n      videoElement.srcObject = stream;\n      videoElement.play();\n      loopStart();\n    } catch (e) {\n      switch (e.message) {\n        case mediaStreamErrorType.GET_USER_MEDIA_NOT_FOUND:\n          setShowUnSupportErrorModal(true);\n          break;\n        case mediaStreamErrorType.CAMERA_ACTIVATE_ERROR:\n          if (suppressError) return;\n          setShowCameraActivationErrorModal(true);\n          break;\n        default:\n          console.error(e);\n      }\n    }\n  }, [loopStart, preferredCameraId, suppressError]);\n\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    initMediaStream();\n\n    return () => {\n      loopStop();\n      if (videoElement) {\n        const stream = videoElement.srcObject as MediaStream | null;\n        if (!stream) return;\n        const tracks = stream.getTracks();\n\n        tracks.forEach((track) => {\n          track.stop();\n        });\n\n        videoElement.srcObject = null;\n      }\n    };\n  }, [loopStart, loopStop, videoRef, initMediaStream, preferredCameraId]);\n\n  return (\n    <>\n      <Video ref={videoRef} playsInline />\n      <Canvas ref={canvasRef} />\n      <Dialog\n        open={showUnSupportErrorModal}\n        keepMounted\n        aria-labelledby=\"unsupported-device-title\"\n        aria-describedby=\"unsupported-device-description\"\n      >\n        <DialogTitle id=\"unsupported-device-title\">不支援的裝置</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"unsupported-device-description\">\n            {t(\"message.doesnt_support_get_user_media\")}\n            {isIOS && <>{t(\"message.sure_above_ios_14\")}</>}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Link to=\"/\">\n            <Button color=\"primary\">{t(\"button.back_home\")}</Button>\n          </Link>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={showCameraActivationErrorModal}\n        keepMounted\n        aria-labelledby=\"camera-activation-title\"\n        aria-describedby=\"camera-activation-description\"\n      >\n        <DialogTitle id=\"camera-activation-title\">\n          {t(\"dialog.cannot_open_camera.title\")}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"camera-activation-description\">\n            {t(\"dialog.cannot_open_camera.content\")}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Link to=\"/\">\n            <Button color=\"primary\">{t(\"button.back_home\")}</Button>\n          </Link>\n          <Link to=\"/cameraSetting\">\n            <Button color=\"primary\">{t(\"button.camera_setting\")}</Button>\n          </Link>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst Video = styled.video`\n  /* Make video to at least 100% wide and tall */\n  min-width: 100%;\n  min-height: 100%;\n\n  /* Setting width & height to auto prevents the browser from stretching or squishing the video */\n  width: auto;\n  height: auto;\n\n  /* Center the video */\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Canvas = styled.canvas`\n  display: none;\n`;\n","import {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { isEmpty, isNil } from \"ramda\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\nimport { Header } from \"../../components/Header\";\nimport { MediaStream } from \"../../components/MediaStream\";\nimport { useCamera } from \"../../hooks/useCamera\";\n\nconst CameraSetting = () => {\n  const { t } = useTranslation(\"camera_setting\");\n  const { preferredCameraId, setPreferredCameraId, cameraList } = useCamera();\n\n  return (\n    <PageWrapper>\n      <Header backPath=\"/\" name={t(\"name\")} />\n      <FormWrapper>\n        <StyledFormControl>\n          <InputLabel id=\"cameraId\">{t(\"form.camera_choice.label\")}</InputLabel>\n          <Select\n            labelId=\"cameraId\"\n            id=\"demo-simple-select\"\n            value={preferredCameraId}\n            onChange={(e) => {\n              setPreferredCameraId((e.target.value as string) || \"AUTO\");\n            }}\n          >\n            <MenuItem value=\"AUTO\">{t(\"form.camera_choice.auto\")}</MenuItem>\n            {cameraList.map(({ deviceId, label }) => (\n              <MenuItem value={deviceId} key=\"deviceId\">\n                {isNil(label) || isEmpty(label) ? deviceId : label}\n              </MenuItem>\n            ))}\n          </Select>\n          <FormHelperText>{t(\"form.camera_choice.explain\")}</FormHelperText>\n        </StyledFormControl>\n      </FormWrapper>\n      <VideoContainer>\n        <MediaStream suppressError />\n      </VideoContainer>\n    </PageWrapper>\n  );\n};\n\nexport default CameraSetting;\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n`;\n\nconst VideoContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n`;\n\nconst StyledFormControl = styled(FormControl)`\n  width: 100%;\n\n  &.MuiFormControl-root {\n    margin: 8px;\n  }\n`;\n"],"sourceRoot":""}